{"version":3,"sources":["components/Party.js","components/MajorityMeter.js","components/Declaration.js","App.js","index.js"],"names":["styles","makeStyles","partyContainer","width","party","props","display","alignItems","fontWeight","letterSpacing","padding","margin","borderRadius","color","justifyItems","justifyContent","backgroundColor","popVote","Party","classes","className","name","seats","small","votes","useStyles","meter","maxWidth","position","minHeight","bar","background","height","animationName","animationDuration","transition","transitionDelay","zIndex","majorityLine","bottom","borderLeft","majorityLabel","textAlign","top","marginLeft","Bar","other","style","Barchart","useState","maxSeats","setMaxSeats","majorityPosition","setMajorityPosition","useEffect","data","leadingParty","partyResults","majority","seatTotal","right","map","i","key","left","root","paddingBottom","alignSelf","fontSize","paddingLeft","paddingRight","Declaration","declarationText","main","flexDirection","titleRow","title","barchart","flexWrap","partyMap","alignContent","update","App","setData","declaration","setDeclaration","setTitle","timer","setSeats","setMajority","setDeclarationText","province","url","replace","results","RegExp","exec","window","location","search","decodeURIComponent","getQueryString","console","log","axios","get","then","res","status","catch","err","startTimer","getData","overallResult","partyName","resultText","text","e","setInterval","split","find","el","includes","parties","date","push","nameShort","votesPercent","Date","generated","findIndex","MajorityMeter","majorityPercent","toString","screenSize","innerWidth","ReactDOM","render","undefined","document","getElementById"],"mappings":"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","file":"static/js/main.d21c0dca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles({\r\n    partyContainer: {\r\n        width: '20%',\r\n\r\n    },\r\n    party: props=> ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontWeight: 'bold',\r\n        letterSpacing: 2,\r\n        padding: '5px 5px',\r\n        margin: 1,\r\n        borderRadius: 5,\r\n        color: 'white',\r\n        justifyItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: props.color \r\n    }),\r\n    popVote: {\r\n        padding: 5,\r\n        fontWeight: 'bold',\r\n        // textAlign: 'right',\r\n\r\n    }\r\n})\r\n\r\nconst Party = (props) => {\r\n    \r\n    const classes = styles(props)\r\n    \r\n    return (\r\n        <div className={classes.partyContainer}>\r\n            <div className={classes.party}>\r\n                <div>{props.name}</div>\r\n                <div>{props.seats}</div>\r\n            </div>\r\n            <div className={classes.popVote}>\r\n                {props.small? `${props.votes}%` : `Pop vote: ${props.votes}%`}\r\n                {/* Pop vote: {props.votes}% */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Party;","import React, {useState, useEffect} from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\n// import {CSSTransition} from 'react-transition-group'\r\n\r\nconst useStyles = makeStyles({\r\n    meter: {\r\n        maxWidth: '95%',\r\n        position: 'relative',\r\n        minHeight: '20px',\r\n\r\n    },\r\n    bar: {\r\n      background: (props) =>\r\n        props.color, \r\n      width: '0%',\r\n      borderRadius: '0px 5px 5px 0px',\r\n      height: 10,\r\n      margin: 2,\r\n      animationName: 'animate-bar',\r\n      animationDuration: '0.5s',\r\n      transition: `width 300ms ease-in-out`,\r\n      transitionDelay: '100ms',\r\n      zIndex: 20\r\n\r\n    },\r\n    majorityLine: {\r\n        position: 'absolute',\r\n        height: '120%',\r\n        minHeight: '20px',\r\n        bottom: -2,\r\n        borderLeft: '2px solid black',\r\n        transition: `left 300ms ease-in-out`,\r\n    },\r\n    majorityLabel: {\r\n        position: 'absolute',\r\n        textAlign: 'left',\r\n        top: -25,\r\n        marginLeft: -7,\r\n        fontWeight: 'bolder',\r\n        transition: `right 300ms ease-in-out`,\r\n    }\r\n  });\r\n  \r\n\r\nfunction Bar(props) {\r\n    const { color, votes, ...other } = props;\r\n    const classes = useStyles(props);\r\n    return <div className={`animate-bar ${classes.bar}`} style={{width: votes}} {...other} />;\r\n}\r\n\r\nconst Barchart = (props) => {\r\n    \r\n    const [maxSeats, setMaxSeats] = useState(null)\r\n    const [majorityPosition, setMajorityPosition] = useState(50);\r\n    const classes = useStyles(props)\r\n    \r\n    useEffect(()=> {\r\n        if (props.data) {\r\n            let leadingParty = props.data.partyResults[0];\r\n            if (leadingParty.seats >= props.majority) {\r\n                setMaxSeats(leadingParty.seats);\r\n                setMajorityPosition(props.majority/leadingParty.seats*100)\r\n            } else {\r\n                setMaxSeats(props.majority)\r\n                setMajorityPosition(props.majority/props.majority*100)\r\n            }\r\n        }\r\n    }, [props.data,props.seatTotal, props.majority])\r\n\r\n    return (\r\n        <div className={classes.meter}>\r\n            <div className={classes.majorityLabel} style={{right: `${100-majorityPosition}%`}}>{props.majority} seats needed for majority</div>\r\n            {props.data && maxSeats && props.data.partyResults.map((party, i)=>{\r\n                return <Bar key={i} color={party.color} votes={party.seats > 0 ? `${(party.seats/maxSeats)*100}%` : '0.5%'} />\r\n            })    \r\n            }\r\n            <div className={classes.majorityLine} style={{left: `${majorityPosition}%`}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Barchart;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nconst useStyles=makeStyles({\r\n    root: {\r\n        display: 'flex', \r\n        alignItems: 'center',\r\n        paddingBottom: 15,\r\n        fontWeight: \"bolder\", \r\n        alignSelf: 'flex-start',\r\n        fontSize: 14,\r\n        paddingLeft: 5,\r\n        '& svg': {\r\n            color: 'green',\r\n            fontSize: 20, \r\n            paddingRight: 5\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst Declaration = (props) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={props.declarationText && classes.root}>\r\n            <CheckCircleIcon />\r\n            {props.declarationText}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Declaration","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport axios from 'axios'\r\n\r\n//Components\r\nimport Party from './components/Party'\r\nimport MajorityMeter from './components/MajorityMeter';\r\nimport Declaration from './components/Declaration';\r\n\r\n\r\n\r\nconst styles = makeStyles({\r\n\tmain: {\r\n\t\t// fontFamily: 'Roboto',\r\n\t\tdisplay: 'flex',\r\n\t\tposition: 'relative',\r\n\t\tflexDirection: 'column',\r\n\t\tpadding: '10px 10px',\r\n\t\tbackgroundColor: '#ededf0'\r\n\t},\r\n\ttitleRow: {\r\n\t\tdisplay: 'flex', \r\n\t\tpadding: '0px 5px 5px 5px',\r\n\t\tjustifyContent: 'space-between'\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 24,\r\n\t\t// paddingBottom: 10, \r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tbarchart: {\r\n\t\tfontSize: 14,\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '20px 0',\r\n\t\tflexDirection: 'column-reverse',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tpartyMap: {\r\n\t\tfontSize: 16,\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\talignContent: 'left',\r\n\t},\r\n\tupdate: {\r\n\t\tpadding: '15px 5px',\r\n\t\tfontSize: 10\r\n\t}\r\n})\r\n\r\nconst App = (props) => {\r\n\r\n\tconst classes = styles(props);\r\n\tconst [data, setData] = useState(null)\r\n\tconst [declaration, setDeclaration] = useState(null)\r\n\tconst [title, setTitle] = useState('')\r\n\tconst [timer, setTimer] = useState(30000)\r\n\tconst [seatTotal, setSeats] = useState(0)\r\n\tconst [majority, setMajority] = useState(0)\r\n    const [declarationText, setDeclarationText] = useState('')\r\n\r\n\tfunction getQueryString(name) {\r\n\t\tname = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n\t\tvar regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\r\n\t\t\tresults = regex.exec(window.location.search);\r\n\t\treturn results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\r\n\t  }\r\n\r\n\tuseEffect(()=>{\r\n\t\tlet province = 'nb'\r\n\t\tvar url = getQueryString('prov')\r\n\t\tif (url) {\r\n\t\t  province = url\r\n\t\t}\r\n\t\tconsole.log(`Updating every ${timer/1000} seconds`)\r\n\t\taxios.get(`/${province}/config`)\r\n\t\t\t.then(res=>{\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetTitle(res.data.title)\r\n\t\t\t\t\tsetSeats(res.data.seats)\r\n\t\t\t\t\tsetMajority(res.data.majority)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err=>console.log(\"error setting title\"))\r\n\t\tstartTimer();\r\n\t\tgetData();\r\n\t},[])\r\n\t\r\n\tuseEffect(()=>{\r\n\t\ttry {\r\n\t\t\tif (data && declaration) {\r\n\t\t\t\tif (declaration.overallResult.partyName && declaration.overallResult.resultText) {\r\n\t\t\t\t\tlet text = declaration.overallResult.partyName + ' ' + declaration.overallResult.resultText;\r\n\t\t\t\t\tsetDeclarationText(text)\r\n\t\t\t\t} else \r\n\t\t\t\tsetDeclarationText('')\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t\r\n\t\t}\r\n\r\n    },[data,declaration])\r\n\t\r\n\tconst startTimer = () => {\r\n\t\tsetInterval(()=>{\r\n\t\t\tgetData();\r\n\t\t}, timer);\r\n\t}\r\n\t\r\n\r\n\tconst getData = () => {\r\n\t\tlet province = 'nb'\r\n\t\ttry {\r\n\t\t\tprovince = window.location.search.split('/').find(el=>el.includes('?prov=')).split('=')[1];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('default province')\r\n\t\t}\r\n\t\tconsole.log('fetching')\r\n\t\taxios.get(`/${province}/overallresults`)\r\n\t\t\t.then(function (res) {\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetData(res.data)\r\n\t\t\t\t} \r\n\t\t\t})\r\n\t\t\t.catch(err=>{\r\n\t\t\t\tconsole.log(\"Error fetching results\")\r\n\t\t\t})\r\n\t\taxios.get(`/${province}/declaration`)\r\n\t\t.then(function (res) {\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDeclaration(res.data)\r\n\t\t\t} \r\n\t\t})\r\n\t\t.catch(err=>{\r\n\t\t\tconsole.log(\"Error fetching results\")\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tconst seats = [];\r\n\r\n\tconst parties = [];\r\n\r\n\tvar date = ''\r\n\r\n\tif (data) {\r\n\t\tdata.partyResults.map((party, i)=>{\r\n\t\t\t// if (party.seats > 0 ) {\r\n\t\t\t\tparties.push(<Party small={props.small} key={`${party}-${i}`} name={party.nameShort} seats={party.seats} votes={party.votesPercent} color={party.color} />)\r\n\t\t\t// }\r\n\t\t})\r\n\t\tdate = new Date(data.generated)\r\n\t\tconst containsOther = data.partyResults.findIndex(party=>party.nameShort === \"OTH\")\r\n\t\tif (containsOther === -1) {\r\n\t\t\tparties.push(<Party key={-1} name={'OTH'} seats={0} votes={0} color={'rgb(192, 192, 192)'} small={props.small} />)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.main}>\r\n\t\t\t<div className={classes.titleRow}>\r\n\t\t\t\t<div className={classes.title}>{title}</div>\r\n\t\t\t</div>\r\n\t\t\t{declarationText && \r\n\t\t\t\t<Declaration declarationText={declarationText} />\r\n\t\t\t}\t\r\n\t\t\t{(data) && <div className={classes.barchart}>\r\n\t\t\t\t<MajorityMeter seatTotal={seatTotal} majority={majority} majorityPercent={(majority/seatTotal)*100} data={data}/>\r\n\t\t\t</div>}\r\n\t\t\t\r\n\t\t\t<div className={classes.partyMap}>\r\n\t\t\t\t{parties}\r\n\t\t\t</div>\r\n\t\t\t{/* <div className={classes.declaration}>Declaration</div> */}\r\n\t\t\t{data && <div className={classes.update}>Last updated: {date && date.toString()}</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\nlet screenSize= window.innerWidth < 500;\r\n\r\nReactDOM.render(<App small={screenSize ? 'true' : undefined}/>, document.getElementById(\"root\"));"],"sourceRoot":""}